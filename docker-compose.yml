version: "2"

networks:
  idm_network:
    driver: bridge
    ipam:
     config:
       - subnet: 172.18.1.0/24
         gateway: 172.18.1.1

volumes:
  vol-mysql:
  vol-mongo:

services:

  mysql:
    image: mysql/mysql-server:5.7.21
    ports:
      - "3306:3306"
    networks:
      idm_network:
        ipv4_address: 172.18.1.5
    volumes:
      - vol-mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=idm
      - MYSQL_ROOT_HOST=172.18.1.6

  fiware-idm:
    image: fiware/idm
    ports:
      - "3000:3000"
      - "443:443"
    networks:
      idm_network:
        ipv4_address: 172.18.1.6
    environment:
      - DATABASE_HOST=mysql

  aa-webapp:
    image: node:latest  
    ports:
      - "80:80"
    networks:
      idm_network:
        ipv4_address: 172.18.1.7
    volumes:
      - /home/drmckay/science/iot1/aa-webapp:/opt/aa-webapp
    tty: true

  aa-pep-proxy:
    build:
      context: aa-pep-proxy
      dockerfile: Dockerfile
    networks:
      idm_network:
        ipv4_address: 172.18.1.8

  aa-backend:
    image: node:latest
    ports:
      - "8080:80"    
    networks:
      idm_network:
        ipv4_address: 172.18.1.9
    volumes:      
      - /home/drmckay/science/iot1/aa-backend:/opt/aa-backend
    tty: true

  sensors:
    build:
      context: sensors_scripts
      dockerfile: Dockerfile
    networks:
      idm_network:
        ipv4_address: 172.18.1.10
    volumes: 
      - /home/drmckay/science/iot1/sensors_scripts:/opt/sensors
    tty: true

  mongo:
    image: mongo:latest
    volumes:
      - vol-mongo:/data/db    
    networks:
      idm_network:
        ipv4_address: 172.18.1.11
